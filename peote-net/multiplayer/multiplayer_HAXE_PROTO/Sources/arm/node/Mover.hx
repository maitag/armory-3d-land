package arm.node;

@:access(armory.logicnode.LogicNode)@:keep class Mover extends armory.logicnode.LogicTree {

	var functionNodes:Map<String, armory.logicnode.FunctionNode>;

	var functionOutputNodes:Map<String, armory.logicnode.FunctionOutputNode>;

	public function new() {
		super();
		name = "Mover";
		this.functionNodes = new Map();
		this.functionOutputNodes = new Map();
		notifyOnAdd(add);
	}

	override public function add() {
		var _SetVariable_001 = new armory.logicnode.SetVariableNode(this);
		_SetVariable_001.preallocInputs(3);
		_SetVariable_001.preallocOutputs(1);
		var _Keyboard_009 = new armory.logicnode.MergedKeyboardNode(this);
		_Keyboard_009.property0 = "released";
		_Keyboard_009.property1 = "shift";
		_Keyboard_009.preallocInputs(0);
		_Keyboard_009.preallocOutputs(2);
		armory.logicnode.LogicNode.addLink(_Keyboard_009, new armory.logicnode.BooleanNode(this, false), 1, 0);
		armory.logicnode.LogicNode.addLink(_Keyboard_009, _SetVariable_001, 0, 0);
		var _Float_004 = new armory.logicnode.FloatNode(this);
		_Float_004.preallocInputs(1);
		_Float_004.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 1.0), _Float_004, 0, 0);
		armory.logicnode.LogicNode.addLink(_Float_004, _SetVariable_001, 0, 1);
		var _Float_001 = new armory.logicnode.FloatNode(this);
		_Float_001.preallocInputs(1);
		_Float_001.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 1.0), _Float_001, 0, 0);
		armory.logicnode.LogicNode.addLink(_Float_001, _SetVariable_001, 0, 2);
		armory.logicnode.LogicNode.addLink(_SetVariable_001, new armory.logicnode.NullNode(this), 0, 0);
		var _SetVariable = new armory.logicnode.SetVariableNode(this);
		_SetVariable.preallocInputs(3);
		_SetVariable.preallocOutputs(1);
		var _Keyboard_008 = new armory.logicnode.MergedKeyboardNode(this);
		_Keyboard_008.property0 = "down";
		_Keyboard_008.property1 = "shift";
		_Keyboard_008.preallocInputs(0);
		_Keyboard_008.preallocOutputs(2);
		armory.logicnode.LogicNode.addLink(_Keyboard_008, new armory.logicnode.BooleanNode(this, false), 1, 0);
		armory.logicnode.LogicNode.addLink(_Keyboard_008, _SetVariable, 0, 0);
		armory.logicnode.LogicNode.addLink(_Float_004, _SetVariable, 0, 1);
		var _Float = new armory.logicnode.FloatNode(this);
		_Float.preallocInputs(1);
		_Float.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 1.7000000476837158), _Float, 0, 0);
		armory.logicnode.LogicNode.addLink(_Float, _SetVariable, 0, 2);
		armory.logicnode.LogicNode.addLink(_SetVariable, new armory.logicnode.NullNode(this), 0, 0);
		var _ApplyImpulse = new armory.logicnode.ApplyImpulseNode(this);
		_ApplyImpulse.preallocInputs(4);
		_ApplyImpulse.preallocOutputs(1);
		var _Branch = new armory.logicnode.BranchNode(this);
		_Branch.preallocInputs(2);
		_Branch.preallocOutputs(2);
		var _Keyboard_010 = new armory.logicnode.MergedKeyboardNode(this);
		_Keyboard_010.property0 = "started";
		_Keyboard_010.property1 = "space";
		_Keyboard_010.preallocInputs(0);
		_Keyboard_010.preallocOutputs(2);
		armory.logicnode.LogicNode.addLink(_Keyboard_010, new armory.logicnode.BooleanNode(this, false), 1, 0);
		armory.logicnode.LogicNode.addLink(_Keyboard_010, _Branch, 0, 0);
		var _Compare = new armory.logicnode.CompareNode(this);
		_Compare.property0 = "Equal";
		_Compare.property1 = 9.999999747378752e-05;
		_Compare.preallocInputs(2);
		_Compare.preallocOutputs(1);
		var _RayCast = new armory.logicnode.CastPhysicsRayNode(this);
		_RayCast.preallocInputs(3);
		_RayCast.preallocOutputs(3);
		var _GetObjectLocation = new armory.logicnode.GetLocationNode(this);
		_GetObjectLocation.preallocInputs(2);
		_GetObjectLocation.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.ObjectNode(this, ""), _GetObjectLocation, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.BooleanNode(this, false), _GetObjectLocation, 0, 1);
		armory.logicnode.LogicNode.addLink(_GetObjectLocation, _RayCast, 0, 0);
		var _VectorMath = new armory.logicnode.VectorMathNode(this);
		_VectorMath.property0 = "Add";
		_VectorMath.property1 = false;
		_VectorMath.preallocInputs(2);
		_VectorMath.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(_GetObjectLocation, _VectorMath, 0, 0);
		var _VectorMath_001 = new armory.logicnode.VectorMathNode(this);
		_VectorMath_001.property0 = "MultiplyFloats";
		_VectorMath_001.property1 = false;
		_VectorMath_001.preallocInputs(2);
		_VectorMath_001.preallocOutputs(1);
		var _VectorMath_002 = new armory.logicnode.VectorMathNode(this);
		_VectorMath_002.property0 = "MultiplyFloats";
		_VectorMath_002.property1 = false;
		_VectorMath_002.preallocInputs(2);
		_VectorMath_002.preallocOutputs(1);
		var _TransformtoVector = new armory.logicnode.VectorFromTransformNode(this);
		_TransformtoVector.property0 = "Up";
		_TransformtoVector.preallocInputs(1);
		_TransformtoVector.preallocOutputs(3);
		var _GetObjectTransform = new armory.logicnode.GetTransformNode(this);
		_GetObjectTransform.preallocInputs(1);
		_GetObjectTransform.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.ObjectNode(this, ""), _GetObjectTransform, 0, 0);
		armory.logicnode.LogicNode.addLink(_GetObjectTransform, _TransformtoVector, 0, 0);
		armory.logicnode.LogicNode.addLink(_TransformtoVector, new armory.logicnode.VectorNode(this, 0.0,0.0,0.0), 1, 0);
		armory.logicnode.LogicNode.addLink(_TransformtoVector, new armory.logicnode.FloatNode(this, 0.0), 2, 0);
		armory.logicnode.LogicNode.addLink(_TransformtoVector, _VectorMath_002, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, -1.0), _VectorMath_002, 0, 1);
		armory.logicnode.LogicNode.addLink(_VectorMath_002, _VectorMath_001, 0, 0);
		var _Float_005 = new armory.logicnode.FloatNode(this);
		_Float_005.preallocInputs(1);
		_Float_005.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 1.0), _Float_005, 0, 0);
		armory.logicnode.LogicNode.addLink(_Float_005, _VectorMath_001, 0, 1);
		armory.logicnode.LogicNode.addLink(_VectorMath_001, _VectorMath, 0, 1);
		armory.logicnode.LogicNode.addLink(_VectorMath, _RayCast, 0, 1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.IntegerNode(this, 1), _RayCast, 0, 2);
		armory.logicnode.LogicNode.addLink(_RayCast, new armory.logicnode.VectorNode(this, 0.0,0.0,0.0), 1, 0);
		armory.logicnode.LogicNode.addLink(_RayCast, new armory.logicnode.VectorNode(this, 0.0,0.0,0.0), 2, 0);
		armory.logicnode.LogicNode.addLink(_RayCast, _Compare, 0, 0);
		var _Null = new armory.logicnode.NoneNode(this);
		_Null.preallocInputs(0);
		_Null.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(_Null, _Compare, 0, 1);
		armory.logicnode.LogicNode.addLink(_Compare, _Branch, 0, 1);
		armory.logicnode.LogicNode.addLink(_Branch, new armory.logicnode.NullNode(this), 0, 0);
		armory.logicnode.LogicNode.addLink(_Branch, _ApplyImpulse, 1, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.ObjectNode(this, ""), _ApplyImpulse, 0, 1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.VectorNode(this, 0.0,0.0,200.0), _ApplyImpulse, 0, 2);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.BooleanNode(this, false), _ApplyImpulse, 0, 3);
		armory.logicnode.LogicNode.addLink(_ApplyImpulse, new armory.logicnode.NullNode(this), 0, 0);
		var _SetActionPaused_007 = new armory.logicnode.SetActionPausedNode(this);
		_SetActionPaused_007.preallocInputs(3);
		_SetActionPaused_007.preallocOutputs(1);
		var _Keyboard_007 = new armory.logicnode.MergedKeyboardNode(this);
		_Keyboard_007.property0 = "released";
		_Keyboard_007.property1 = "d";
		_Keyboard_007.preallocInputs(0);
		_Keyboard_007.preallocOutputs(2);
		armory.logicnode.LogicNode.addLink(_Keyboard_007, new armory.logicnode.BooleanNode(this, false), 1, 0);
		armory.logicnode.LogicNode.addLink(_Keyboard_007, _SetActionPaused_007, 0, 0);
		var _GetObjectChild_001 = new armory.logicnode.GetChildNode(this);
		_GetObjectChild_001.property0 = "Starts With";
		_GetObjectChild_001.preallocInputs(2);
		_GetObjectChild_001.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.ObjectNode(this, ""), _GetObjectChild_001, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.StringNode(this, "char_rig"), _GetObjectChild_001, 0, 1);
		armory.logicnode.LogicNode.addLink(_GetObjectChild_001, _SetActionPaused_007, 0, 1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.BooleanNode(this, true), _SetActionPaused_007, 0, 2);
		armory.logicnode.LogicNode.addLink(_SetActionPaused_007, new armory.logicnode.NullNode(this), 0, 0);
		var _SetActionPaused_005 = new armory.logicnode.SetActionPausedNode(this);
		_SetActionPaused_005.preallocInputs(3);
		_SetActionPaused_005.preallocOutputs(1);
		var _Keyboard_003 = new armory.logicnode.MergedKeyboardNode(this);
		_Keyboard_003.property0 = "released";
		_Keyboard_003.property1 = "a";
		_Keyboard_003.preallocInputs(0);
		_Keyboard_003.preallocOutputs(2);
		armory.logicnode.LogicNode.addLink(_Keyboard_003, new armory.logicnode.BooleanNode(this, false), 1, 0);
		armory.logicnode.LogicNode.addLink(_Keyboard_003, _SetActionPaused_005, 0, 0);
		armory.logicnode.LogicNode.addLink(_GetObjectChild_001, _SetActionPaused_005, 0, 1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.BooleanNode(this, true), _SetActionPaused_005, 0, 2);
		armory.logicnode.LogicNode.addLink(_SetActionPaused_005, new armory.logicnode.NullNode(this), 0, 0);
		var _SetActionPaused_003 = new armory.logicnode.SetActionPausedNode(this);
		_SetActionPaused_003.preallocInputs(3);
		_SetActionPaused_003.preallocOutputs(1);
		var _Keyboard_002 = new armory.logicnode.MergedKeyboardNode(this);
		_Keyboard_002.property0 = "released";
		_Keyboard_002.property1 = "s";
		_Keyboard_002.preallocInputs(0);
		_Keyboard_002.preallocOutputs(2);
		armory.logicnode.LogicNode.addLink(_Keyboard_002, new armory.logicnode.BooleanNode(this, false), 1, 0);
		armory.logicnode.LogicNode.addLink(_Keyboard_002, _SetActionPaused_003, 0, 0);
		armory.logicnode.LogicNode.addLink(_GetObjectChild_001, _SetActionPaused_003, 0, 1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.BooleanNode(this, true), _SetActionPaused_003, 0, 2);
		armory.logicnode.LogicNode.addLink(_SetActionPaused_003, new armory.logicnode.NullNode(this), 0, 0);
		var _SetActionPaused_001 = new armory.logicnode.SetActionPausedNode(this);
		_SetActionPaused_001.preallocInputs(3);
		_SetActionPaused_001.preallocOutputs(1);
		var _Keyboard_001 = new armory.logicnode.MergedKeyboardNode(this);
		_Keyboard_001.property0 = "released";
		_Keyboard_001.property1 = "w";
		_Keyboard_001.preallocInputs(0);
		_Keyboard_001.preallocOutputs(2);
		armory.logicnode.LogicNode.addLink(_Keyboard_001, new armory.logicnode.BooleanNode(this, false), 1, 0);
		armory.logicnode.LogicNode.addLink(_Keyboard_001, _SetActionPaused_001, 0, 0);
		armory.logicnode.LogicNode.addLink(_GetObjectChild_001, _SetActionPaused_001, 0, 1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.BooleanNode(this, true), _SetActionPaused_001, 0, 2);
		armory.logicnode.LogicNode.addLink(_SetActionPaused_001, new armory.logicnode.NullNode(this), 0, 0);
		var _SetActionPaused_002 = new armory.logicnode.SetActionPausedNode(this);
		_SetActionPaused_002.preallocInputs(3);
		_SetActionPaused_002.preallocOutputs(1);
		var _CallNodeGroup_001_BackRotate_GroupOutputNode = new armory.logicnode.GroupOutputsNode(this);
		_CallNodeGroup_001_BackRotate_GroupOutputNode.preallocInputs(1);
		_CallNodeGroup_001_BackRotate_GroupOutputNode.preallocOutputs(0);
		var _CallNodeGroup_001_BackRotate_SetObjectRotation = new armory.logicnode.SetRotationNode(this);
		_CallNodeGroup_001_BackRotate_SetObjectRotation.property0 = "Euler Angles";
		_CallNodeGroup_001_BackRotate_SetObjectRotation.preallocInputs(3);
		_CallNodeGroup_001_BackRotate_SetObjectRotation.preallocOutputs(1);
		var _CallNodeGroup_001_BackRotate_TranslateObject = new armory.logicnode.TranslateObjectNode(this);
		_CallNodeGroup_001_BackRotate_TranslateObject.preallocInputs(4);
		_CallNodeGroup_001_BackRotate_TranslateObject.preallocOutputs(1);
		var _CallNodeGroup_001_BackRotate_GroupInputNode = new armory.logicnode.GroupInputsNode(this);
		_CallNodeGroup_001_BackRotate_GroupInputNode.preallocInputs(0);
		_CallNodeGroup_001_BackRotate_GroupInputNode.preallocOutputs(6);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_GroupInputNode, _CallNodeGroup_001_BackRotate_TranslateObject, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.ObjectNode(this, ""), _CallNodeGroup_001_BackRotate_TranslateObject, 0, 1);
		var _CallNodeGroup_001_BackRotate_VectorMath_001 = new armory.logicnode.VectorMathNode(this);
		_CallNodeGroup_001_BackRotate_VectorMath_001.property0 = "Multiply";
		_CallNodeGroup_001_BackRotate_VectorMath_001.property1 = false;
		_CallNodeGroup_001_BackRotate_VectorMath_001.preallocInputs(2);
		_CallNodeGroup_001_BackRotate_VectorMath_001.preallocOutputs(1);
		var _CallNodeGroup_001_BackRotate_TransformtoVector = new armory.logicnode.VectorFromTransformNode(this);
		_CallNodeGroup_001_BackRotate_TransformtoVector.property0 = "Look";
		_CallNodeGroup_001_BackRotate_TransformtoVector.preallocInputs(1);
		_CallNodeGroup_001_BackRotate_TransformtoVector.preallocOutputs(3);
		var _CallNodeGroup_001_BackRotate_GetObjectTransform_001 = new armory.logicnode.GetTransformNode(this);
		_CallNodeGroup_001_BackRotate_GetObjectTransform_001.preallocInputs(1);
		_CallNodeGroup_001_BackRotate_GetObjectTransform_001.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_GroupInputNode, _CallNodeGroup_001_BackRotate_GetObjectTransform_001, 1, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_GetObjectTransform_001, _CallNodeGroup_001_BackRotate_TransformtoVector, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_TransformtoVector, new armory.logicnode.VectorNode(this, 0.0,0.0,0.0), 1, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_TransformtoVector, new armory.logicnode.FloatNode(this, 0.0), 2, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_TransformtoVector, _CallNodeGroup_001_BackRotate_VectorMath_001, 0, 0);
		var _CallNodeGroup_001_BackRotate_VectorMath = new armory.logicnode.VectorMathNode(this);
		_CallNodeGroup_001_BackRotate_VectorMath.property0 = "MultiplyFloats";
		_CallNodeGroup_001_BackRotate_VectorMath.property1 = false;
		_CallNodeGroup_001_BackRotate_VectorMath.preallocInputs(2);
		_CallNodeGroup_001_BackRotate_VectorMath.preallocOutputs(1);
		var _CallNodeGroup_001_BackRotate_VectorMath_003 = new armory.logicnode.VectorMathNode(this);
		_CallNodeGroup_001_BackRotate_VectorMath_003.property0 = "MultiplyFloats";
		_CallNodeGroup_001_BackRotate_VectorMath_003.property1 = false;
		_CallNodeGroup_001_BackRotate_VectorMath_003.preallocInputs(2);
		_CallNodeGroup_001_BackRotate_VectorMath_003.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.VectorNode(this, 1.0,1.0,0.0), _CallNodeGroup_001_BackRotate_VectorMath_003, 0, 0);
		var _CallNodeGroup_001_BackRotate_Math_001 = new armory.logicnode.MathNode(this);
		_CallNodeGroup_001_BackRotate_Math_001.property0 = "Subtract";
		_CallNodeGroup_001_BackRotate_Math_001.property1 = false;
		_CallNodeGroup_001_BackRotate_Math_001.preallocInputs(2);
		_CallNodeGroup_001_BackRotate_Math_001.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 1.0), _CallNodeGroup_001_BackRotate_Math_001, 0, 0);
		var _CallNodeGroup_001_BackRotate_Math = new armory.logicnode.MathNode(this);
		_CallNodeGroup_001_BackRotate_Math.property0 = "Multiply";
		_CallNodeGroup_001_BackRotate_Math.property1 = false;
		_CallNodeGroup_001_BackRotate_Math.preallocInputs(2);
		_CallNodeGroup_001_BackRotate_Math.preallocOutputs(1);
		var _CallNodeGroup_001_BackRotate_BooleantoInt = new armory.logicnode.IntFromBooleanNode(this);
		_CallNodeGroup_001_BackRotate_BooleantoInt.preallocInputs(1);
		_CallNodeGroup_001_BackRotate_BooleantoInt.preallocOutputs(1);
		var _CallNodeGroup_001_BackRotate_Compare_001 = new armory.logicnode.CompareNode(this);
		_CallNodeGroup_001_BackRotate_Compare_001.property0 = "Or";
		_CallNodeGroup_001_BackRotate_Compare_001.property1 = 9.999999747378752e-05;
		_CallNodeGroup_001_BackRotate_Compare_001.preallocInputs(2);
		_CallNodeGroup_001_BackRotate_Compare_001.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_GroupInputNode, _CallNodeGroup_001_BackRotate_Compare_001, 4, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_GroupInputNode, _CallNodeGroup_001_BackRotate_Compare_001, 5, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_Compare_001, _CallNodeGroup_001_BackRotate_BooleantoInt, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_BooleantoInt, _CallNodeGroup_001_BackRotate_Math, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 0.23000000417232513), _CallNodeGroup_001_BackRotate_Math, 0, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_Math, _CallNodeGroup_001_BackRotate_Math_001, 0, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_Math_001, _CallNodeGroup_001_BackRotate_VectorMath_003, 0, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_VectorMath_003, _CallNodeGroup_001_BackRotate_VectorMath, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_GroupInputNode, _CallNodeGroup_001_BackRotate_VectorMath, 3, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_VectorMath, _CallNodeGroup_001_BackRotate_VectorMath_001, 0, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_VectorMath_001, _CallNodeGroup_001_BackRotate_TranslateObject, 0, 2);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.BooleanNode(this, false), _CallNodeGroup_001_BackRotate_TranslateObject, 0, 3);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_TranslateObject, _CallNodeGroup_001_BackRotate_SetObjectRotation, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_GroupInputNode, _CallNodeGroup_001_BackRotate_SetObjectRotation, 2, 1);
		var _CallNodeGroup_001_BackRotate_RotationMath = new armory.logicnode.RotationMathNode(this);
		_CallNodeGroup_001_BackRotate_RotationMath.property0 = "Lerp";
		_CallNodeGroup_001_BackRotate_RotationMath.preallocInputs(3);
		_CallNodeGroup_001_BackRotate_RotationMath.preallocOutputs(1);
		var _CallNodeGroup_001_BackRotate_GetObjectRotation_002 = new armory.logicnode.GetRotationNode(this);
		_CallNodeGroup_001_BackRotate_GetObjectRotation_002.property0 = "Global";
		_CallNodeGroup_001_BackRotate_GetObjectRotation_002.preallocInputs(1);
		_CallNodeGroup_001_BackRotate_GetObjectRotation_002.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_GroupInputNode, _CallNodeGroup_001_BackRotate_GetObjectRotation_002, 2, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_GetObjectRotation_002, _CallNodeGroup_001_BackRotate_RotationMath, 0, 0);
		var _CallNodeGroup_001_BackRotate_Rotation_003 = new armory.logicnode.RotationNode(this);
		_CallNodeGroup_001_BackRotate_Rotation_003.property0 = "EulerAngles";
		_CallNodeGroup_001_BackRotate_Rotation_003.property1 = "Rad";
		_CallNodeGroup_001_BackRotate_Rotation_003.property2 = "XYZ";
		_CallNodeGroup_001_BackRotate_Rotation_003.preallocInputs(2);
		_CallNodeGroup_001_BackRotate_Rotation_003.preallocOutputs(1);
		var _CallNodeGroup_001_BackRotate_VectorMath_008 = new armory.logicnode.VectorMathNode(this);
		_CallNodeGroup_001_BackRotate_VectorMath_008.property0 = "Add";
		_CallNodeGroup_001_BackRotate_VectorMath_008.property1 = false;
		_CallNodeGroup_001_BackRotate_VectorMath_008.preallocInputs(2);
		_CallNodeGroup_001_BackRotate_VectorMath_008.preallocOutputs(1);
		var _CallNodeGroup_001_BackRotate_Vector = new armory.logicnode.VectorNode(this);
		_CallNodeGroup_001_BackRotate_Vector.preallocInputs(3);
		_CallNodeGroup_001_BackRotate_Vector.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 0.0), _CallNodeGroup_001_BackRotate_Vector, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 0.0), _CallNodeGroup_001_BackRotate_Vector, 0, 1);
		var _CallNodeGroup_001_BackRotate_SeparateXYZ = new armory.logicnode.SeparateVectorNode(this);
		_CallNodeGroup_001_BackRotate_SeparateXYZ.preallocInputs(1);
		_CallNodeGroup_001_BackRotate_SeparateXYZ.preallocOutputs(3);
		var _CallNodeGroup_001_BackRotate_SeparateRotation = new armory.logicnode.SeparateRotationNode(this);
		_CallNodeGroup_001_BackRotate_SeparateRotation.property0 = "EulerAngles";
		_CallNodeGroup_001_BackRotate_SeparateRotation.property1 = "Rad";
		_CallNodeGroup_001_BackRotate_SeparateRotation.property2 = "XYZ";
		_CallNodeGroup_001_BackRotate_SeparateRotation.preallocInputs(1);
		_CallNodeGroup_001_BackRotate_SeparateRotation.preallocOutputs(2);
		var _CallNodeGroup_001_BackRotate_GetObjectRotation_001 = new armory.logicnode.GetRotationNode(this);
		_CallNodeGroup_001_BackRotate_GetObjectRotation_001.property0 = "Global";
		_CallNodeGroup_001_BackRotate_GetObjectRotation_001.preallocInputs(1);
		_CallNodeGroup_001_BackRotate_GetObjectRotation_001.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_GroupInputNode, _CallNodeGroup_001_BackRotate_GetObjectRotation_001, 1, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_GetObjectRotation_001, _CallNodeGroup_001_BackRotate_SeparateRotation, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_SeparateRotation, new armory.logicnode.FloatNode(this, 0.0), 1, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_SeparateRotation, _CallNodeGroup_001_BackRotate_SeparateXYZ, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_SeparateXYZ, new armory.logicnode.FloatNode(this, 0.0), 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_SeparateXYZ, new armory.logicnode.FloatNode(this, 0.0), 1, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_SeparateXYZ, _CallNodeGroup_001_BackRotate_Vector, 2, 2);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_Vector, _CallNodeGroup_001_BackRotate_VectorMath_008, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.VectorNode(this, 0.0,0.0,3.140000104904175), _CallNodeGroup_001_BackRotate_VectorMath_008, 0, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_VectorMath_008, _CallNodeGroup_001_BackRotate_Rotation_003, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 0.0), _CallNodeGroup_001_BackRotate_Rotation_003, 0, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_Rotation_003, _CallNodeGroup_001_BackRotate_RotationMath, 0, 1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 0.20000000298023224), _CallNodeGroup_001_BackRotate_RotationMath, 0, 2);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_RotationMath, _CallNodeGroup_001_BackRotate_SetObjectRotation, 0, 2);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_SetObjectRotation, _CallNodeGroup_001_BackRotate_GroupOutputNode, 0, 0);
		var _Keyboard_004 = new armory.logicnode.MergedKeyboardNode(this);
		_Keyboard_004.property0 = "down";
		_Keyboard_004.property1 = "s";
		_Keyboard_004.preallocInputs(0);
		_Keyboard_004.preallocOutputs(2);
		armory.logicnode.LogicNode.addLink(_Keyboard_004, _CallNodeGroup_001_BackRotate_GroupInputNode, 0, 0);
		var _GetObjectChild = new armory.logicnode.GetChildNode(this);
		_GetObjectChild.property0 = "Starts With";
		_GetObjectChild.preallocInputs(2);
		_GetObjectChild.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.ObjectNode(this, ""), _GetObjectChild, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.StringNode(this, "char_cam"), _GetObjectChild, 0, 1);
		armory.logicnode.LogicNode.addLink(_GetObjectChild, _CallNodeGroup_001_BackRotate_GroupInputNode, 0, 1);
		armory.logicnode.LogicNode.addLink(_GetObjectChild_001, _CallNodeGroup_001_BackRotate_GroupInputNode, 0, 2);
		var _Math = new armory.logicnode.MathNode(this);
		_Math.property0 = "Multiply";
		_Math.property1 = false;
		_Math.preallocInputs(2);
		_Math.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(_Float_004, _Math, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 0.05000000074505806), _Math, 0, 1);
		armory.logicnode.LogicNode.addLink(_Math, _CallNodeGroup_001_BackRotate_GroupInputNode, 0, 3);
		var _Keyboard_005 = new armory.logicnode.MergedKeyboardNode(this);
		_Keyboard_005.property0 = "down";
		_Keyboard_005.property1 = "a";
		_Keyboard_005.preallocInputs(0);
		_Keyboard_005.preallocOutputs(2);
		armory.logicnode.LogicNode.addLink(_Keyboard_005, _CallNodeGroup_001_BackRotate_GroupInputNode, 1, 4);
		var _Keyboard_006 = new armory.logicnode.MergedKeyboardNode(this);
		_Keyboard_006.property0 = "down";
		_Keyboard_006.property1 = "d";
		_Keyboard_006.preallocInputs(0);
		_Keyboard_006.preallocOutputs(2);
		armory.logicnode.LogicNode.addLink(_Keyboard_006, _CallNodeGroup_001_BackRotate_GroupInputNode, 1, 5);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_001_BackRotate_GroupOutputNode, _SetActionPaused_002, 0, 0);
		armory.logicnode.LogicNode.addLink(_GetObjectChild_001, _SetActionPaused_002, 0, 1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.BooleanNode(this, false), _SetActionPaused_002, 0, 2);
		armory.logicnode.LogicNode.addLink(_SetActionPaused_002, new armory.logicnode.NullNode(this), 0, 0);
		var _SetActionPaused_004 = new armory.logicnode.SetActionPausedNode(this);
		_SetActionPaused_004.preallocInputs(3);
		_SetActionPaused_004.preallocOutputs(1);
		var _CallNodeGroup_002_LeftRotate_GroupOutputNode = new armory.logicnode.GroupOutputsNode(this);
		_CallNodeGroup_002_LeftRotate_GroupOutputNode.preallocInputs(1);
		_CallNodeGroup_002_LeftRotate_GroupOutputNode.preallocOutputs(0);
		var _CallNodeGroup_002_LeftRotate_SetObjectRotation = new armory.logicnode.SetRotationNode(this);
		_CallNodeGroup_002_LeftRotate_SetObjectRotation.property0 = "Euler Angles";
		_CallNodeGroup_002_LeftRotate_SetObjectRotation.preallocInputs(3);
		_CallNodeGroup_002_LeftRotate_SetObjectRotation.preallocOutputs(1);
		var _CallNodeGroup_002_LeftRotate_TranslateObject = new armory.logicnode.TranslateObjectNode(this);
		_CallNodeGroup_002_LeftRotate_TranslateObject.preallocInputs(4);
		_CallNodeGroup_002_LeftRotate_TranslateObject.preallocOutputs(1);
		var _CallNodeGroup_002_LeftRotate_GroupInputNode = new armory.logicnode.GroupInputsNode(this);
		_CallNodeGroup_002_LeftRotate_GroupInputNode.preallocInputs(0);
		_CallNodeGroup_002_LeftRotate_GroupInputNode.preallocOutputs(6);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_GroupInputNode, _CallNodeGroup_002_LeftRotate_TranslateObject, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.ObjectNode(this, ""), _CallNodeGroup_002_LeftRotate_TranslateObject, 0, 1);
		var _CallNodeGroup_002_LeftRotate_VectorMath_001 = new armory.logicnode.VectorMathNode(this);
		_CallNodeGroup_002_LeftRotate_VectorMath_001.property0 = "Multiply";
		_CallNodeGroup_002_LeftRotate_VectorMath_001.property1 = false;
		_CallNodeGroup_002_LeftRotate_VectorMath_001.preallocInputs(2);
		_CallNodeGroup_002_LeftRotate_VectorMath_001.preallocOutputs(1);
		var _CallNodeGroup_002_LeftRotate_TransformtoVector = new armory.logicnode.VectorFromTransformNode(this);
		_CallNodeGroup_002_LeftRotate_TransformtoVector.property0 = "Right";
		_CallNodeGroup_002_LeftRotate_TransformtoVector.preallocInputs(1);
		_CallNodeGroup_002_LeftRotate_TransformtoVector.preallocOutputs(3);
		var _CallNodeGroup_002_LeftRotate_GetObjectTransform_001 = new armory.logicnode.GetTransformNode(this);
		_CallNodeGroup_002_LeftRotate_GetObjectTransform_001.preallocInputs(1);
		_CallNodeGroup_002_LeftRotate_GetObjectTransform_001.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_GroupInputNode, _CallNodeGroup_002_LeftRotate_GetObjectTransform_001, 1, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_GetObjectTransform_001, _CallNodeGroup_002_LeftRotate_TransformtoVector, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_TransformtoVector, new armory.logicnode.VectorNode(this, 0.0,0.0,0.0), 1, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_TransformtoVector, new armory.logicnode.FloatNode(this, 0.0), 2, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_TransformtoVector, _CallNodeGroup_002_LeftRotate_VectorMath_001, 0, 0);
		var _CallNodeGroup_002_LeftRotate_VectorMath_002 = new armory.logicnode.VectorMathNode(this);
		_CallNodeGroup_002_LeftRotate_VectorMath_002.property0 = "MultiplyFloats";
		_CallNodeGroup_002_LeftRotate_VectorMath_002.property1 = false;
		_CallNodeGroup_002_LeftRotate_VectorMath_002.preallocInputs(2);
		_CallNodeGroup_002_LeftRotate_VectorMath_002.preallocOutputs(1);
		var _CallNodeGroup_002_LeftRotate_VectorMath_003 = new armory.logicnode.VectorMathNode(this);
		_CallNodeGroup_002_LeftRotate_VectorMath_003.property0 = "MultiplyFloats";
		_CallNodeGroup_002_LeftRotate_VectorMath_003.property1 = false;
		_CallNodeGroup_002_LeftRotate_VectorMath_003.preallocInputs(2);
		_CallNodeGroup_002_LeftRotate_VectorMath_003.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.VectorNode(this, 1.0,1.0,0.0), _CallNodeGroup_002_LeftRotate_VectorMath_003, 0, 0);
		var _CallNodeGroup_002_LeftRotate_Math_001 = new armory.logicnode.MathNode(this);
		_CallNodeGroup_002_LeftRotate_Math_001.property0 = "Subtract";
		_CallNodeGroup_002_LeftRotate_Math_001.property1 = false;
		_CallNodeGroup_002_LeftRotate_Math_001.preallocInputs(2);
		_CallNodeGroup_002_LeftRotate_Math_001.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 1.0), _CallNodeGroup_002_LeftRotate_Math_001, 0, 0);
		var _CallNodeGroup_002_LeftRotate_Math = new armory.logicnode.MathNode(this);
		_CallNodeGroup_002_LeftRotate_Math.property0 = "Multiply";
		_CallNodeGroup_002_LeftRotate_Math.property1 = false;
		_CallNodeGroup_002_LeftRotate_Math.preallocInputs(2);
		_CallNodeGroup_002_LeftRotate_Math.preallocOutputs(1);
		var _CallNodeGroup_002_LeftRotate_BooleantoInt = new armory.logicnode.IntFromBooleanNode(this);
		_CallNodeGroup_002_LeftRotate_BooleantoInt.preallocInputs(1);
		_CallNodeGroup_002_LeftRotate_BooleantoInt.preallocOutputs(1);
		var _CallNodeGroup_002_LeftRotate_Compare_001 = new armory.logicnode.CompareNode(this);
		_CallNodeGroup_002_LeftRotate_Compare_001.property0 = "Or";
		_CallNodeGroup_002_LeftRotate_Compare_001.property1 = 9.999999747378752e-05;
		_CallNodeGroup_002_LeftRotate_Compare_001.preallocInputs(2);
		_CallNodeGroup_002_LeftRotate_Compare_001.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_GroupInputNode, _CallNodeGroup_002_LeftRotate_Compare_001, 4, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_GroupInputNode, _CallNodeGroup_002_LeftRotate_Compare_001, 5, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_Compare_001, _CallNodeGroup_002_LeftRotate_BooleantoInt, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_BooleantoInt, _CallNodeGroup_002_LeftRotate_Math, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 0.23000000417232513), _CallNodeGroup_002_LeftRotate_Math, 0, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_Math, _CallNodeGroup_002_LeftRotate_Math_001, 0, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_Math_001, _CallNodeGroup_002_LeftRotate_VectorMath_003, 0, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_VectorMath_003, _CallNodeGroup_002_LeftRotate_VectorMath_002, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_GroupInputNode, _CallNodeGroup_002_LeftRotate_VectorMath_002, 3, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_VectorMath_002, _CallNodeGroup_002_LeftRotate_VectorMath_001, 0, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_VectorMath_001, _CallNodeGroup_002_LeftRotate_TranslateObject, 0, 2);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.BooleanNode(this, false), _CallNodeGroup_002_LeftRotate_TranslateObject, 0, 3);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_TranslateObject, _CallNodeGroup_002_LeftRotate_SetObjectRotation, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_GroupInputNode, _CallNodeGroup_002_LeftRotate_SetObjectRotation, 2, 1);
		var _CallNodeGroup_002_LeftRotate_RotationMath = new armory.logicnode.RotationMathNode(this);
		_CallNodeGroup_002_LeftRotate_RotationMath.property0 = "Lerp";
		_CallNodeGroup_002_LeftRotate_RotationMath.preallocInputs(3);
		_CallNodeGroup_002_LeftRotate_RotationMath.preallocOutputs(1);
		var _CallNodeGroup_002_LeftRotate_GetObjectRotation_002 = new armory.logicnode.GetRotationNode(this);
		_CallNodeGroup_002_LeftRotate_GetObjectRotation_002.property0 = "Global";
		_CallNodeGroup_002_LeftRotate_GetObjectRotation_002.preallocInputs(1);
		_CallNodeGroup_002_LeftRotate_GetObjectRotation_002.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_GroupInputNode, _CallNodeGroup_002_LeftRotate_GetObjectRotation_002, 2, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_GetObjectRotation_002, _CallNodeGroup_002_LeftRotate_RotationMath, 0, 0);
		var _CallNodeGroup_002_LeftRotate_Rotation_003 = new armory.logicnode.RotationNode(this);
		_CallNodeGroup_002_LeftRotate_Rotation_003.property0 = "EulerAngles";
		_CallNodeGroup_002_LeftRotate_Rotation_003.property1 = "Rad";
		_CallNodeGroup_002_LeftRotate_Rotation_003.property2 = "XYZ";
		_CallNodeGroup_002_LeftRotate_Rotation_003.preallocInputs(2);
		_CallNodeGroup_002_LeftRotate_Rotation_003.preallocOutputs(1);
		var _CallNodeGroup_002_LeftRotate_VectorMath_008 = new armory.logicnode.VectorMathNode(this);
		_CallNodeGroup_002_LeftRotate_VectorMath_008.property0 = "Add";
		_CallNodeGroup_002_LeftRotate_VectorMath_008.property1 = false;
		_CallNodeGroup_002_LeftRotate_VectorMath_008.preallocInputs(2);
		_CallNodeGroup_002_LeftRotate_VectorMath_008.preallocOutputs(1);
		var _CallNodeGroup_002_LeftRotate_Vector = new armory.logicnode.VectorNode(this);
		_CallNodeGroup_002_LeftRotate_Vector.preallocInputs(3);
		_CallNodeGroup_002_LeftRotate_Vector.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 0.0), _CallNodeGroup_002_LeftRotate_Vector, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 0.0), _CallNodeGroup_002_LeftRotate_Vector, 0, 1);
		var _CallNodeGroup_002_LeftRotate_SeparateXYZ = new armory.logicnode.SeparateVectorNode(this);
		_CallNodeGroup_002_LeftRotate_SeparateXYZ.preallocInputs(1);
		_CallNodeGroup_002_LeftRotate_SeparateXYZ.preallocOutputs(3);
		var _CallNodeGroup_002_LeftRotate_SeparateRotation = new armory.logicnode.SeparateRotationNode(this);
		_CallNodeGroup_002_LeftRotate_SeparateRotation.property0 = "EulerAngles";
		_CallNodeGroup_002_LeftRotate_SeparateRotation.property1 = "Rad";
		_CallNodeGroup_002_LeftRotate_SeparateRotation.property2 = "XYZ";
		_CallNodeGroup_002_LeftRotate_SeparateRotation.preallocInputs(1);
		_CallNodeGroup_002_LeftRotate_SeparateRotation.preallocOutputs(2);
		var _CallNodeGroup_002_LeftRotate_GetObjectRotation_001 = new armory.logicnode.GetRotationNode(this);
		_CallNodeGroup_002_LeftRotate_GetObjectRotation_001.property0 = "Global";
		_CallNodeGroup_002_LeftRotate_GetObjectRotation_001.preallocInputs(1);
		_CallNodeGroup_002_LeftRotate_GetObjectRotation_001.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_GroupInputNode, _CallNodeGroup_002_LeftRotate_GetObjectRotation_001, 1, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_GetObjectRotation_001, _CallNodeGroup_002_LeftRotate_SeparateRotation, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_SeparateRotation, new armory.logicnode.FloatNode(this, 0.0), 1, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_SeparateRotation, _CallNodeGroup_002_LeftRotate_SeparateXYZ, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_SeparateXYZ, new armory.logicnode.FloatNode(this, 0.0), 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_SeparateXYZ, new armory.logicnode.FloatNode(this, 0.0), 1, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_SeparateXYZ, _CallNodeGroup_002_LeftRotate_Vector, 2, 2);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_Vector, _CallNodeGroup_002_LeftRotate_VectorMath_008, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.VectorNode(this, 0.0,0.0,1.5700000524520874), _CallNodeGroup_002_LeftRotate_VectorMath_008, 0, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_VectorMath_008, _CallNodeGroup_002_LeftRotate_Rotation_003, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 0.0), _CallNodeGroup_002_LeftRotate_Rotation_003, 0, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_Rotation_003, _CallNodeGroup_002_LeftRotate_RotationMath, 0, 1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 0.20000000298023224), _CallNodeGroup_002_LeftRotate_RotationMath, 0, 2);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_RotationMath, _CallNodeGroup_002_LeftRotate_SetObjectRotation, 0, 2);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_SetObjectRotation, _CallNodeGroup_002_LeftRotate_GroupOutputNode, 0, 0);
		armory.logicnode.LogicNode.addLink(_Keyboard_005, _CallNodeGroup_002_LeftRotate_GroupInputNode, 0, 0);
		armory.logicnode.LogicNode.addLink(_GetObjectChild, _CallNodeGroup_002_LeftRotate_GroupInputNode, 0, 1);
		armory.logicnode.LogicNode.addLink(_GetObjectChild_001, _CallNodeGroup_002_LeftRotate_GroupInputNode, 0, 2);
		armory.logicnode.LogicNode.addLink(_Math, _CallNodeGroup_002_LeftRotate_GroupInputNode, 0, 3);
		var _Keyboard = new armory.logicnode.MergedKeyboardNode(this);
		_Keyboard.property0 = "down";
		_Keyboard.property1 = "w";
		_Keyboard.preallocInputs(0);
		_Keyboard.preallocOutputs(2);
		armory.logicnode.LogicNode.addLink(_Keyboard, _CallNodeGroup_002_LeftRotate_GroupInputNode, 1, 4);
		armory.logicnode.LogicNode.addLink(_Keyboard_004, _CallNodeGroup_002_LeftRotate_GroupInputNode, 1, 5);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_002_LeftRotate_GroupOutputNode, _SetActionPaused_004, 0, 0);
		armory.logicnode.LogicNode.addLink(_GetObjectChild_001, _SetActionPaused_004, 0, 1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.BooleanNode(this, false), _SetActionPaused_004, 0, 2);
		armory.logicnode.LogicNode.addLink(_SetActionPaused_004, new armory.logicnode.NullNode(this), 0, 0);
		var _SetActionPaused_006 = new armory.logicnode.SetActionPausedNode(this);
		_SetActionPaused_006.preallocInputs(3);
		_SetActionPaused_006.preallocOutputs(1);
		var _CallNodeGroup_003_RightRotate_GroupOutputNode = new armory.logicnode.GroupOutputsNode(this);
		_CallNodeGroup_003_RightRotate_GroupOutputNode.preallocInputs(1);
		_CallNodeGroup_003_RightRotate_GroupOutputNode.preallocOutputs(0);
		var _CallNodeGroup_003_RightRotate_SetObjectRotation = new armory.logicnode.SetRotationNode(this);
		_CallNodeGroup_003_RightRotate_SetObjectRotation.property0 = "Euler Angles";
		_CallNodeGroup_003_RightRotate_SetObjectRotation.preallocInputs(3);
		_CallNodeGroup_003_RightRotate_SetObjectRotation.preallocOutputs(1);
		var _CallNodeGroup_003_RightRotate_TranslateObject = new armory.logicnode.TranslateObjectNode(this);
		_CallNodeGroup_003_RightRotate_TranslateObject.preallocInputs(4);
		_CallNodeGroup_003_RightRotate_TranslateObject.preallocOutputs(1);
		var _CallNodeGroup_003_RightRotate_GroupInputNode = new armory.logicnode.GroupInputsNode(this);
		_CallNodeGroup_003_RightRotate_GroupInputNode.preallocInputs(0);
		_CallNodeGroup_003_RightRotate_GroupInputNode.preallocOutputs(6);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_GroupInputNode, _CallNodeGroup_003_RightRotate_TranslateObject, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.ObjectNode(this, ""), _CallNodeGroup_003_RightRotate_TranslateObject, 0, 1);
		var _CallNodeGroup_003_RightRotate_VectorMath_001 = new armory.logicnode.VectorMathNode(this);
		_CallNodeGroup_003_RightRotate_VectorMath_001.property0 = "Multiply";
		_CallNodeGroup_003_RightRotate_VectorMath_001.property1 = false;
		_CallNodeGroup_003_RightRotate_VectorMath_001.preallocInputs(2);
		_CallNodeGroup_003_RightRotate_VectorMath_001.preallocOutputs(1);
		var _CallNodeGroup_003_RightRotate_TransformtoVector = new armory.logicnode.VectorFromTransformNode(this);
		_CallNodeGroup_003_RightRotate_TransformtoVector.property0 = "Right";
		_CallNodeGroup_003_RightRotate_TransformtoVector.preallocInputs(1);
		_CallNodeGroup_003_RightRotate_TransformtoVector.preallocOutputs(3);
		var _CallNodeGroup_003_RightRotate_GetObjectTransform_001 = new armory.logicnode.GetTransformNode(this);
		_CallNodeGroup_003_RightRotate_GetObjectTransform_001.preallocInputs(1);
		_CallNodeGroup_003_RightRotate_GetObjectTransform_001.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_GroupInputNode, _CallNodeGroup_003_RightRotate_GetObjectTransform_001, 1, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_GetObjectTransform_001, _CallNodeGroup_003_RightRotate_TransformtoVector, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_TransformtoVector, new armory.logicnode.VectorNode(this, 0.0,0.0,0.0), 1, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_TransformtoVector, new armory.logicnode.FloatNode(this, 0.0), 2, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_TransformtoVector, _CallNodeGroup_003_RightRotate_VectorMath_001, 0, 0);
		var _CallNodeGroup_003_RightRotate_VectorMath_002 = new armory.logicnode.VectorMathNode(this);
		_CallNodeGroup_003_RightRotate_VectorMath_002.property0 = "MultiplyFloats";
		_CallNodeGroup_003_RightRotate_VectorMath_002.property1 = false;
		_CallNodeGroup_003_RightRotate_VectorMath_002.preallocInputs(2);
		_CallNodeGroup_003_RightRotate_VectorMath_002.preallocOutputs(1);
		var _CallNodeGroup_003_RightRotate_VectorMath_003 = new armory.logicnode.VectorMathNode(this);
		_CallNodeGroup_003_RightRotate_VectorMath_003.property0 = "MultiplyFloats";
		_CallNodeGroup_003_RightRotate_VectorMath_003.property1 = false;
		_CallNodeGroup_003_RightRotate_VectorMath_003.preallocInputs(2);
		_CallNodeGroup_003_RightRotate_VectorMath_003.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.VectorNode(this, -1.0,-1.0,0.0), _CallNodeGroup_003_RightRotate_VectorMath_003, 0, 0);
		var _CallNodeGroup_003_RightRotate_Math_001 = new armory.logicnode.MathNode(this);
		_CallNodeGroup_003_RightRotate_Math_001.property0 = "Subtract";
		_CallNodeGroup_003_RightRotate_Math_001.property1 = false;
		_CallNodeGroup_003_RightRotate_Math_001.preallocInputs(2);
		_CallNodeGroup_003_RightRotate_Math_001.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 1.0), _CallNodeGroup_003_RightRotate_Math_001, 0, 0);
		var _CallNodeGroup_003_RightRotate_Math = new armory.logicnode.MathNode(this);
		_CallNodeGroup_003_RightRotate_Math.property0 = "Multiply";
		_CallNodeGroup_003_RightRotate_Math.property1 = false;
		_CallNodeGroup_003_RightRotate_Math.preallocInputs(2);
		_CallNodeGroup_003_RightRotate_Math.preallocOutputs(1);
		var _CallNodeGroup_003_RightRotate_BooleantoInt = new armory.logicnode.IntFromBooleanNode(this);
		_CallNodeGroup_003_RightRotate_BooleantoInt.preallocInputs(1);
		_CallNodeGroup_003_RightRotate_BooleantoInt.preallocOutputs(1);
		var _CallNodeGroup_003_RightRotate_Compare_001 = new armory.logicnode.CompareNode(this);
		_CallNodeGroup_003_RightRotate_Compare_001.property0 = "Or";
		_CallNodeGroup_003_RightRotate_Compare_001.property1 = 9.999999747378752e-05;
		_CallNodeGroup_003_RightRotate_Compare_001.preallocInputs(2);
		_CallNodeGroup_003_RightRotate_Compare_001.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_GroupInputNode, _CallNodeGroup_003_RightRotate_Compare_001, 4, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_GroupInputNode, _CallNodeGroup_003_RightRotate_Compare_001, 5, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_Compare_001, _CallNodeGroup_003_RightRotate_BooleantoInt, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_BooleantoInt, _CallNodeGroup_003_RightRotate_Math, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 0.23000000417232513), _CallNodeGroup_003_RightRotate_Math, 0, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_Math, _CallNodeGroup_003_RightRotate_Math_001, 0, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_Math_001, _CallNodeGroup_003_RightRotate_VectorMath_003, 0, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_VectorMath_003, _CallNodeGroup_003_RightRotate_VectorMath_002, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_GroupInputNode, _CallNodeGroup_003_RightRotate_VectorMath_002, 3, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_VectorMath_002, _CallNodeGroup_003_RightRotate_VectorMath_001, 0, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_VectorMath_001, _CallNodeGroup_003_RightRotate_TranslateObject, 0, 2);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.BooleanNode(this, false), _CallNodeGroup_003_RightRotate_TranslateObject, 0, 3);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_TranslateObject, _CallNodeGroup_003_RightRotate_SetObjectRotation, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_GroupInputNode, _CallNodeGroup_003_RightRotate_SetObjectRotation, 2, 1);
		var _CallNodeGroup_003_RightRotate_RotationMath = new armory.logicnode.RotationMathNode(this);
		_CallNodeGroup_003_RightRotate_RotationMath.property0 = "Lerp";
		_CallNodeGroup_003_RightRotate_RotationMath.preallocInputs(3);
		_CallNodeGroup_003_RightRotate_RotationMath.preallocOutputs(1);
		var _CallNodeGroup_003_RightRotate_GetObjectRotation_002 = new armory.logicnode.GetRotationNode(this);
		_CallNodeGroup_003_RightRotate_GetObjectRotation_002.property0 = "Global";
		_CallNodeGroup_003_RightRotate_GetObjectRotation_002.preallocInputs(1);
		_CallNodeGroup_003_RightRotate_GetObjectRotation_002.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_GroupInputNode, _CallNodeGroup_003_RightRotate_GetObjectRotation_002, 2, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_GetObjectRotation_002, _CallNodeGroup_003_RightRotate_RotationMath, 0, 0);
		var _CallNodeGroup_003_RightRotate_Rotation_003 = new armory.logicnode.RotationNode(this);
		_CallNodeGroup_003_RightRotate_Rotation_003.property0 = "EulerAngles";
		_CallNodeGroup_003_RightRotate_Rotation_003.property1 = "Rad";
		_CallNodeGroup_003_RightRotate_Rotation_003.property2 = "XYZ";
		_CallNodeGroup_003_RightRotate_Rotation_003.preallocInputs(2);
		_CallNodeGroup_003_RightRotate_Rotation_003.preallocOutputs(1);
		var _CallNodeGroup_003_RightRotate_VectorMath_008 = new armory.logicnode.VectorMathNode(this);
		_CallNodeGroup_003_RightRotate_VectorMath_008.property0 = "Add";
		_CallNodeGroup_003_RightRotate_VectorMath_008.property1 = false;
		_CallNodeGroup_003_RightRotate_VectorMath_008.preallocInputs(2);
		_CallNodeGroup_003_RightRotate_VectorMath_008.preallocOutputs(1);
		var _CallNodeGroup_003_RightRotate_Vector = new armory.logicnode.VectorNode(this);
		_CallNodeGroup_003_RightRotate_Vector.preallocInputs(3);
		_CallNodeGroup_003_RightRotate_Vector.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 0.0), _CallNodeGroup_003_RightRotate_Vector, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 0.0), _CallNodeGroup_003_RightRotate_Vector, 0, 1);
		var _CallNodeGroup_003_RightRotate_SeparateXYZ = new armory.logicnode.SeparateVectorNode(this);
		_CallNodeGroup_003_RightRotate_SeparateXYZ.preallocInputs(1);
		_CallNodeGroup_003_RightRotate_SeparateXYZ.preallocOutputs(3);
		var _CallNodeGroup_003_RightRotate_SeparateRotation = new armory.logicnode.SeparateRotationNode(this);
		_CallNodeGroup_003_RightRotate_SeparateRotation.property0 = "EulerAngles";
		_CallNodeGroup_003_RightRotate_SeparateRotation.property1 = "Rad";
		_CallNodeGroup_003_RightRotate_SeparateRotation.property2 = "XYZ";
		_CallNodeGroup_003_RightRotate_SeparateRotation.preallocInputs(1);
		_CallNodeGroup_003_RightRotate_SeparateRotation.preallocOutputs(2);
		var _CallNodeGroup_003_RightRotate_GetObjectRotation_001 = new armory.logicnode.GetRotationNode(this);
		_CallNodeGroup_003_RightRotate_GetObjectRotation_001.property0 = "Global";
		_CallNodeGroup_003_RightRotate_GetObjectRotation_001.preallocInputs(1);
		_CallNodeGroup_003_RightRotate_GetObjectRotation_001.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_GroupInputNode, _CallNodeGroup_003_RightRotate_GetObjectRotation_001, 1, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_GetObjectRotation_001, _CallNodeGroup_003_RightRotate_SeparateRotation, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_SeparateRotation, new armory.logicnode.FloatNode(this, 0.0), 1, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_SeparateRotation, _CallNodeGroup_003_RightRotate_SeparateXYZ, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_SeparateXYZ, new armory.logicnode.FloatNode(this, 0.0), 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_SeparateXYZ, new armory.logicnode.FloatNode(this, 0.0), 1, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_SeparateXYZ, _CallNodeGroup_003_RightRotate_Vector, 2, 2);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_Vector, _CallNodeGroup_003_RightRotate_VectorMath_008, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.VectorNode(this, 0.0,0.0,-1.5700000524520874), _CallNodeGroup_003_RightRotate_VectorMath_008, 0, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_VectorMath_008, _CallNodeGroup_003_RightRotate_Rotation_003, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 0.0), _CallNodeGroup_003_RightRotate_Rotation_003, 0, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_Rotation_003, _CallNodeGroup_003_RightRotate_RotationMath, 0, 1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 0.20000000298023224), _CallNodeGroup_003_RightRotate_RotationMath, 0, 2);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_RotationMath, _CallNodeGroup_003_RightRotate_SetObjectRotation, 0, 2);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_SetObjectRotation, _CallNodeGroup_003_RightRotate_GroupOutputNode, 0, 0);
		armory.logicnode.LogicNode.addLink(_Keyboard_006, _CallNodeGroup_003_RightRotate_GroupInputNode, 0, 0);
		armory.logicnode.LogicNode.addLink(_GetObjectChild, _CallNodeGroup_003_RightRotate_GroupInputNode, 0, 1);
		armory.logicnode.LogicNode.addLink(_GetObjectChild_001, _CallNodeGroup_003_RightRotate_GroupInputNode, 0, 2);
		armory.logicnode.LogicNode.addLink(_Math, _CallNodeGroup_003_RightRotate_GroupInputNode, 0, 3);
		armory.logicnode.LogicNode.addLink(_Keyboard, _CallNodeGroup_003_RightRotate_GroupInputNode, 1, 4);
		armory.logicnode.LogicNode.addLink(_Keyboard_004, _CallNodeGroup_003_RightRotate_GroupInputNode, 1, 5);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_003_RightRotate_GroupOutputNode, _SetActionPaused_006, 0, 0);
		armory.logicnode.LogicNode.addLink(_GetObjectChild_001, _SetActionPaused_006, 0, 1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.BooleanNode(this, false), _SetActionPaused_006, 0, 2);
		armory.logicnode.LogicNode.addLink(_SetActionPaused_006, new armory.logicnode.NullNode(this), 0, 0);
		var _SetActionPaused_008 = new armory.logicnode.SetActionPausedNode(this);
		_SetActionPaused_008.preallocInputs(3);
		_SetActionPaused_008.preallocOutputs(1);
		var _OnInit = new armory.logicnode.OnInitNode(this);
		_OnInit.preallocInputs(0);
		_OnInit.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(_OnInit, _SetActionPaused_008, 0, 0);
		armory.logicnode.LogicNode.addLink(_GetObjectChild_001, _SetActionPaused_008, 0, 1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.BooleanNode(this, true), _SetActionPaused_008, 0, 2);
		armory.logicnode.LogicNode.addLink(_SetActionPaused_008, new armory.logicnode.NullNode(this), 0, 0);
		var _SetActionPaused = new armory.logicnode.SetActionPausedNode(this);
		_SetActionPaused.preallocInputs(3);
		_SetActionPaused.preallocOutputs(1);
		var _CallNodeGroup_ForwardRotate_GroupOutputNode = new armory.logicnode.GroupOutputsNode(this);
		_CallNodeGroup_ForwardRotate_GroupOutputNode.preallocInputs(1);
		_CallNodeGroup_ForwardRotate_GroupOutputNode.preallocOutputs(0);
		var _CallNodeGroup_ForwardRotate_SetObjectRotation = new armory.logicnode.SetRotationNode(this);
		_CallNodeGroup_ForwardRotate_SetObjectRotation.property0 = "Euler Angles";
		_CallNodeGroup_ForwardRotate_SetObjectRotation.preallocInputs(3);
		_CallNodeGroup_ForwardRotate_SetObjectRotation.preallocOutputs(1);
		var _CallNodeGroup_ForwardRotate_TranslateObject = new armory.logicnode.TranslateObjectNode(this);
		_CallNodeGroup_ForwardRotate_TranslateObject.preallocInputs(4);
		_CallNodeGroup_ForwardRotate_TranslateObject.preallocOutputs(1);
		var _CallNodeGroup_ForwardRotate_GroupInputNode = new armory.logicnode.GroupInputsNode(this);
		_CallNodeGroup_ForwardRotate_GroupInputNode.preallocInputs(0);
		_CallNodeGroup_ForwardRotate_GroupInputNode.preallocOutputs(6);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_GroupInputNode, _CallNodeGroup_ForwardRotate_TranslateObject, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.ObjectNode(this, ""), _CallNodeGroup_ForwardRotate_TranslateObject, 0, 1);
		var _CallNodeGroup_ForwardRotate_VectorMath_001 = new armory.logicnode.VectorMathNode(this);
		_CallNodeGroup_ForwardRotate_VectorMath_001.property0 = "Multiply";
		_CallNodeGroup_ForwardRotate_VectorMath_001.property1 = false;
		_CallNodeGroup_ForwardRotate_VectorMath_001.preallocInputs(2);
		_CallNodeGroup_ForwardRotate_VectorMath_001.preallocOutputs(1);
		var _CallNodeGroup_ForwardRotate_TransformtoVector = new armory.logicnode.VectorFromTransformNode(this);
		_CallNodeGroup_ForwardRotate_TransformtoVector.property0 = "Look";
		_CallNodeGroup_ForwardRotate_TransformtoVector.preallocInputs(1);
		_CallNodeGroup_ForwardRotate_TransformtoVector.preallocOutputs(3);
		var _CallNodeGroup_ForwardRotate_GetObjectTransform_001 = new armory.logicnode.GetTransformNode(this);
		_CallNodeGroup_ForwardRotate_GetObjectTransform_001.preallocInputs(1);
		_CallNodeGroup_ForwardRotate_GetObjectTransform_001.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_GroupInputNode, _CallNodeGroup_ForwardRotate_GetObjectTransform_001, 1, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_GetObjectTransform_001, _CallNodeGroup_ForwardRotate_TransformtoVector, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_TransformtoVector, new armory.logicnode.VectorNode(this, 0.0,0.0,0.0), 1, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_TransformtoVector, new armory.logicnode.FloatNode(this, 0.0), 2, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_TransformtoVector, _CallNodeGroup_ForwardRotate_VectorMath_001, 0, 0);
		var _CallNodeGroup_ForwardRotate_VectorMath = new armory.logicnode.VectorMathNode(this);
		_CallNodeGroup_ForwardRotate_VectorMath.property0 = "MultiplyFloats";
		_CallNodeGroup_ForwardRotate_VectorMath.property1 = false;
		_CallNodeGroup_ForwardRotate_VectorMath.preallocInputs(2);
		_CallNodeGroup_ForwardRotate_VectorMath.preallocOutputs(1);
		var _CallNodeGroup_ForwardRotate_VectorMath_003 = new armory.logicnode.VectorMathNode(this);
		_CallNodeGroup_ForwardRotate_VectorMath_003.property0 = "MultiplyFloats";
		_CallNodeGroup_ForwardRotate_VectorMath_003.property1 = false;
		_CallNodeGroup_ForwardRotate_VectorMath_003.preallocInputs(2);
		_CallNodeGroup_ForwardRotate_VectorMath_003.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.VectorNode(this, -1.0,-1.0,0.0), _CallNodeGroup_ForwardRotate_VectorMath_003, 0, 0);
		var _CallNodeGroup_ForwardRotate_Math_001 = new armory.logicnode.MathNode(this);
		_CallNodeGroup_ForwardRotate_Math_001.property0 = "Subtract";
		_CallNodeGroup_ForwardRotate_Math_001.property1 = false;
		_CallNodeGroup_ForwardRotate_Math_001.preallocInputs(2);
		_CallNodeGroup_ForwardRotate_Math_001.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 1.0), _CallNodeGroup_ForwardRotate_Math_001, 0, 0);
		var _CallNodeGroup_ForwardRotate_Math = new armory.logicnode.MathNode(this);
		_CallNodeGroup_ForwardRotate_Math.property0 = "Multiply";
		_CallNodeGroup_ForwardRotate_Math.property1 = false;
		_CallNodeGroup_ForwardRotate_Math.preallocInputs(2);
		_CallNodeGroup_ForwardRotate_Math.preallocOutputs(1);
		var _CallNodeGroup_ForwardRotate_BooleantoInt = new armory.logicnode.IntFromBooleanNode(this);
		_CallNodeGroup_ForwardRotate_BooleantoInt.preallocInputs(1);
		_CallNodeGroup_ForwardRotate_BooleantoInt.preallocOutputs(1);
		var _CallNodeGroup_ForwardRotate_Compare_001 = new armory.logicnode.CompareNode(this);
		_CallNodeGroup_ForwardRotate_Compare_001.property0 = "Or";
		_CallNodeGroup_ForwardRotate_Compare_001.property1 = 9.999999747378752e-05;
		_CallNodeGroup_ForwardRotate_Compare_001.preallocInputs(2);
		_CallNodeGroup_ForwardRotate_Compare_001.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_GroupInputNode, _CallNodeGroup_ForwardRotate_Compare_001, 4, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_GroupInputNode, _CallNodeGroup_ForwardRotate_Compare_001, 5, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_Compare_001, _CallNodeGroup_ForwardRotate_BooleantoInt, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_BooleantoInt, _CallNodeGroup_ForwardRotate_Math, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 0.23000000417232513), _CallNodeGroup_ForwardRotate_Math, 0, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_Math, _CallNodeGroup_ForwardRotate_Math_001, 0, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_Math_001, _CallNodeGroup_ForwardRotate_VectorMath_003, 0, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_VectorMath_003, _CallNodeGroup_ForwardRotate_VectorMath, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_GroupInputNode, _CallNodeGroup_ForwardRotate_VectorMath, 3, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_VectorMath, _CallNodeGroup_ForwardRotate_VectorMath_001, 0, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_VectorMath_001, _CallNodeGroup_ForwardRotate_TranslateObject, 0, 2);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.BooleanNode(this, false), _CallNodeGroup_ForwardRotate_TranslateObject, 0, 3);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_TranslateObject, _CallNodeGroup_ForwardRotate_SetObjectRotation, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_GroupInputNode, _CallNodeGroup_ForwardRotate_SetObjectRotation, 2, 1);
		var _CallNodeGroup_ForwardRotate_RotationMath = new armory.logicnode.RotationMathNode(this);
		_CallNodeGroup_ForwardRotate_RotationMath.property0 = "Lerp";
		_CallNodeGroup_ForwardRotate_RotationMath.preallocInputs(3);
		_CallNodeGroup_ForwardRotate_RotationMath.preallocOutputs(1);
		var _CallNodeGroup_ForwardRotate_GetObjectRotation_002 = new armory.logicnode.GetRotationNode(this);
		_CallNodeGroup_ForwardRotate_GetObjectRotation_002.property0 = "Global";
		_CallNodeGroup_ForwardRotate_GetObjectRotation_002.preallocInputs(1);
		_CallNodeGroup_ForwardRotate_GetObjectRotation_002.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_GroupInputNode, _CallNodeGroup_ForwardRotate_GetObjectRotation_002, 2, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_GetObjectRotation_002, _CallNodeGroup_ForwardRotate_RotationMath, 0, 0);
		var _CallNodeGroup_ForwardRotate_Rotation_003 = new armory.logicnode.RotationNode(this);
		_CallNodeGroup_ForwardRotate_Rotation_003.property0 = "EulerAngles";
		_CallNodeGroup_ForwardRotate_Rotation_003.property1 = "Rad";
		_CallNodeGroup_ForwardRotate_Rotation_003.property2 = "XYZ";
		_CallNodeGroup_ForwardRotate_Rotation_003.preallocInputs(2);
		_CallNodeGroup_ForwardRotate_Rotation_003.preallocOutputs(1);
		var _CallNodeGroup_ForwardRotate_Vector = new armory.logicnode.VectorNode(this);
		_CallNodeGroup_ForwardRotate_Vector.preallocInputs(3);
		_CallNodeGroup_ForwardRotate_Vector.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 0.0), _CallNodeGroup_ForwardRotate_Vector, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 0.0), _CallNodeGroup_ForwardRotate_Vector, 0, 1);
		var _CallNodeGroup_ForwardRotate_SeparateXYZ = new armory.logicnode.SeparateVectorNode(this);
		_CallNodeGroup_ForwardRotate_SeparateXYZ.preallocInputs(1);
		_CallNodeGroup_ForwardRotate_SeparateXYZ.preallocOutputs(3);
		var _CallNodeGroup_ForwardRotate_SeparateRotation = new armory.logicnode.SeparateRotationNode(this);
		_CallNodeGroup_ForwardRotate_SeparateRotation.property0 = "EulerAngles";
		_CallNodeGroup_ForwardRotate_SeparateRotation.property1 = "Rad";
		_CallNodeGroup_ForwardRotate_SeparateRotation.property2 = "XYZ";
		_CallNodeGroup_ForwardRotate_SeparateRotation.preallocInputs(1);
		_CallNodeGroup_ForwardRotate_SeparateRotation.preallocOutputs(2);
		var _CallNodeGroup_ForwardRotate_GetObjectRotation_001 = new armory.logicnode.GetRotationNode(this);
		_CallNodeGroup_ForwardRotate_GetObjectRotation_001.property0 = "Global";
		_CallNodeGroup_ForwardRotate_GetObjectRotation_001.preallocInputs(1);
		_CallNodeGroup_ForwardRotate_GetObjectRotation_001.preallocOutputs(1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_GroupInputNode, _CallNodeGroup_ForwardRotate_GetObjectRotation_001, 1, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_GetObjectRotation_001, _CallNodeGroup_ForwardRotate_SeparateRotation, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_SeparateRotation, new armory.logicnode.FloatNode(this, 0.0), 1, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_SeparateRotation, _CallNodeGroup_ForwardRotate_SeparateXYZ, 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_SeparateXYZ, new armory.logicnode.FloatNode(this, 0.0), 0, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_SeparateXYZ, new armory.logicnode.FloatNode(this, 0.0), 1, 0);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_SeparateXYZ, _CallNodeGroup_ForwardRotate_Vector, 2, 2);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_Vector, _CallNodeGroup_ForwardRotate_Rotation_003, 0, 0);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 0.0), _CallNodeGroup_ForwardRotate_Rotation_003, 0, 1);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_Rotation_003, _CallNodeGroup_ForwardRotate_RotationMath, 0, 1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.FloatNode(this, 0.20000000298023224), _CallNodeGroup_ForwardRotate_RotationMath, 0, 2);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_RotationMath, _CallNodeGroup_ForwardRotate_SetObjectRotation, 0, 2);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_SetObjectRotation, _CallNodeGroup_ForwardRotate_GroupOutputNode, 0, 0);
		armory.logicnode.LogicNode.addLink(_Keyboard, _CallNodeGroup_ForwardRotate_GroupInputNode, 0, 0);
		armory.logicnode.LogicNode.addLink(_GetObjectChild, _CallNodeGroup_ForwardRotate_GroupInputNode, 0, 1);
		armory.logicnode.LogicNode.addLink(_GetObjectChild_001, _CallNodeGroup_ForwardRotate_GroupInputNode, 0, 2);
		armory.logicnode.LogicNode.addLink(_Math, _CallNodeGroup_ForwardRotate_GroupInputNode, 0, 3);
		armory.logicnode.LogicNode.addLink(_Keyboard_005, _CallNodeGroup_ForwardRotate_GroupInputNode, 1, 4);
		armory.logicnode.LogicNode.addLink(_Keyboard_006, _CallNodeGroup_ForwardRotate_GroupInputNode, 1, 5);
		armory.logicnode.LogicNode.addLink(_CallNodeGroup_ForwardRotate_GroupOutputNode, _SetActionPaused, 0, 0);
		armory.logicnode.LogicNode.addLink(_GetObjectChild_001, _SetActionPaused, 0, 1);
		armory.logicnode.LogicNode.addLink(new armory.logicnode.BooleanNode(this, false), _SetActionPaused, 0, 2);
		armory.logicnode.LogicNode.addLink(_SetActionPaused, new armory.logicnode.NullNode(this), 0, 0);
	}
}